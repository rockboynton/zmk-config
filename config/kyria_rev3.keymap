/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E      &kp R     &kp T                                                             &kp Y      &kp U     &kp I      &kp O    &kp P     &kp BACKSPACE
&kp ESCAPE  &kp A  &kp S  &kp D      &kp F     &kp G                                                             &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT   &kp Z  &kp X  &kp C      &kp V     &kp B     &kp MINUS   &kp PRINTSCREEN  &kp LG(W)  &kp UNDERSCORE  &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                          &kp LCTRL  &kp LALT  &kp LGUI  &kp DELETE  &mo 1            &mo 2      &kp SPACE       &kp LCTRL  &kp LALT  &kp LGUI
            >;

            sensor-bindings =
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>,
                <&inc_dec_kp LG(LS(LEFT_BRACKET)) LG(LS(RIGHT_BRACKET))>;
        };

        num {
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp LEFT_PARENTHESIS                                  &kp RIGHT_PARENTHESIS  &kp N7  &kp N8  &kp N9  &kp ASTERISK  &kp FSLH
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp LBKT                                              &kp RBKT               &kp N4  &kp N5  &kp N6  &kp EQUAL     &kp ENTER
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp K_CALCULATOR      &trans  &trans  &trans  &trans  &kp N0                 &kp N1  &kp N2  &kp N3  &kp PLUS      &kp MINUS
                         &trans   &trans   &trans                &trans  &trans  &trans  &trans  &trans                 &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp K_UNDO K_REDO>,
                <&inc_dec_kp K_FORWARD K_BACK>;
        };

        sym {
            bindings = <
&trans  &trans           &trans         &trans          &trans            &trans                                                             &trans                 &trans             &trans                &trans                 &trans     &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN    &kp DOLLAR      &kp PERCENT       &kp CARET                                                          &kp AMPERSAND          &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &kp EQUAL
&trans  &trans           &kp LESS_THAN  &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &trans  &kp C_PLAY_PAUSE  &kp ENTER  &trans  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE       &kp GREATER_THAN       &trans     &trans
                                        &trans          &trans            &trans                &trans  &trans            &trans     &trans  &trans                 &trans             &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOL_DN>,
                <&inc_dec_kp C_NEXT K_PREV>;
        };

        nav {
            bindings = <
&bt BT_CLR  &trans        &trans        &trans        &trans      &trans                                      &trans  &kp HOME      &kp PAGE_DOWN  &kp PAGE_UP  &kp END        &trans
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_PRV  &bt BT_NXT                                  &trans  &kp LEFT      &kp DOWN       &kp UP       &kp RIGHT      &trans
&trans      &trans        &trans        &trans        &trans      &trans      &trans  &trans  &trans  &trans  &trans  &kp LA(LEFT)  &kp LA(DOWN)   &kp LA(UP)   &kp LA(RIGHT)  &trans
                                        &trans        &trans      &trans      &trans  &trans  &trans  &trans  &trans  &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
